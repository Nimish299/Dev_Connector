{"ast":null,"code":"import { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === payload.id ? {\n          ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["ADD_POST","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","initialState","posts","post","loading","state","action","type","payload","filter","_id","error","map","id","likes"],"sources":["D:/acad/sem 7/Project/Project/client/src/reducers/post.js"],"sourcesContent":["import {\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: {},\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,YAAY,QACP,kBAAkB;AAEzB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,CAAC;AACZ,CAAC;AACD,eAAe,UAAUC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,EAAE;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKT,SAAS;MACZ,OAAO;QACL,GAAGO,KAAK;QACRH,KAAK,EAAEM,OAAO;QACdJ,OAAO,EAAE;MACX,CAAC;IACH,KAAKR,QAAQ;MACX,OAAO;QACL,GAAGS,KAAK;QACRH,KAAK,EAAE,CAACM,OAAO,EAAE,GAAGH,KAAK,CAACH,KAAK,CAAC;QAChCE,OAAO,EAAE;MACX,CAAC;IAEH,KAAKP,WAAW;MACd,OAAO;QACL,GAAGQ,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACO,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACO,GAAG,KAAKF,OAAO,CAAC;QACzDJ,OAAO,EAAE;MACX,CAAC;IACH,KAAKL,UAAU;MACb,OAAO;QACL,GAAGM,KAAK;QACRM,KAAK,EAAEH,OAAO;QACdJ,OAAO,EAAE;MACX,CAAC;IACH,KAAKJ,YAAY;MACf,OAAO;QACL,GAAGK,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACU,GAAG,CAAET,IAAI,IAC1BA,IAAI,CAACO,GAAG,KAAKF,OAAO,CAACK,EAAE,GAAG;UAAE,GAAGV,IAAI;UAAEW,KAAK,EAAEN,OAAO,CAACM;QAAM,CAAC,GAAGX,IAChE,CAAC;QACDC,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOC,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}