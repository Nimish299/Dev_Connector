{"ast":null,"code":"var _jsxFileName = \"D:\\\\acad\\\\sem 7\\\\Project\\\\Project\\\\client\\\\src\\\\componenets\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/profile';\nimport DashboardAction from './DashboardAction';\nimport Education from './Education';\nimport Experience from './Experience';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n  const fetchProfile = useCallback(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  useEffect(() => {\n    fetchProfile();\n  }, [fetchProfile]);\n  return loading && profile == null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardAction, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not yet setup a profile, Please add some Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Q3o4HjGOdBTiO2h3Eqmf1YK7HuA=\");\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Fragment","useEffect","useCallback","PropTypes","connect","Link","getCurrentProfile","DashboardAction","Education","Experience","Spinner","jsxDEV","_jsxDEV","Dashboard","auth","user","profile","loading","_s","fetchProfile","fileName","_jsxFileName","lineNumber","columnNumber","children","className","name","to","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["D:/acad/sem 7/Project/Project/client/src/componenets/dashboard/Dashboard.js"],"sourcesContent":["import React, { Fragment, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport DashboardAction from './DashboardAction';\r\nimport Education from './Education';\r\nimport Experience from './Experience';\r\nimport Spinner from '../layout/Spinner';\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  const fetchProfile = useCallback(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  useEffect(() => {\r\n    fetchProfile();\r\n  }, [fetchProfile]);\r\n\r\n  return loading && profile == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardAction />\r\n          <Experience></Experience>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, Please add some Info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}