{"ast":null,"code":"var _jsxFileName = \"D:\\\\acad\\\\sem 7\\\\Project\\\\Project\\\\client\\\\src\\\\componenets\\\\profiles\\\\Profiles.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from ' ../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  _s();\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["PropTypes","React","Fragment","useEffect","connect","Spinner","getProfiles","jsxDEV","_jsxDEV","Profiles","profile","profiles","loading","_s","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["D:/acad/sem 7/Project/Project/client/src/componenets/profiles/Profiles.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from ' ../layout/Spinner';\r\nimport { getProfiles } from '../../actions/profile';\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, []);\r\n  return <div></div>;\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpD,MAAMC,QAAQ,GAAGA,CAAC;EAAEH,WAAW;EAAEI,OAAO,EAAE;IAAEC,QAAQ;IAAEC;EAAQ;AAAE,CAAC,KAAK;EAAAC,EAAA;EACpEV,SAAS,CAAC,MAAM;IACdG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOE,OAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB,CAAC;AAACJ,EAAA,CALIJ,QAAQ;AAAAS,EAAA,GAART,QAAQ;AAOdA,QAAQ,CAACU,SAAS,GAAG;EACnBb,WAAW,EAAEN,SAAS,CAACoB,IAAI,CAACC,UAAU;EACtCX,OAAO,EAAEV,SAAS,CAACsB,MAAM,CAACD;AAC5B,CAAC;AACD,MAAME,eAAe,GAAIC,KAAK,KAAM;EAClCd,OAAO,EAAEc,KAAK,CAACd;AACjB,CAAC,CAAC;AAEF,eAAeN,OAAO,CAACmB,eAAe,EAAE;EAAEjB;AAAY,CAAC,CAAC,CAACG,QAAQ,CAAC;AAAC,IAAAS,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}