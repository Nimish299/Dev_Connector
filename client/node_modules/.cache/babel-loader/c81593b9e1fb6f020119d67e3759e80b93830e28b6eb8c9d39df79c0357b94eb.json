{"ast":null,"code":"var _jsxFileName = \"D:\\\\acad\\\\sem 7\\\\Project\\\\Project\\\\client\\\\src\\\\componenets\\\\profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  getProfileById,\n  profile,\n  auth,\n  match\n}) => {\n  _s();\n  useEffect(() => {\n    if (match && match.params.id) {\n      getProfileById(match.params.id);\n    }\n  }, [getProfileById, match]);\n\n  //   if (!profile || !match) {\n  //     return <Spinner />;\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  match: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","jsxDEV","_jsxDEV","Profile","profile","auth","match","_s","params","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["D:/acad/sem 7/Project/Project/client/src/componenets/profile/Profile.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ getProfileById, profile, auth, match }) => {\r\n  useEffect(() => {\r\n    if (match && match.params.id) {\r\n      getProfileById(match.params.id);\r\n    }\r\n  }, [getProfileById, match]);\r\n\r\n  //   if (!profile || !match) {\r\n  //     return <Spinner />;\r\n  //   }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Profile</h1>\r\n      {/* Add your profile display code here */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  match: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,OAAO,GAAGA,CAAC;EAAEH,cAAc;EAAEI,OAAO;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC5DX,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,IAAIA,KAAK,CAACE,MAAM,CAACC,EAAE,EAAE;MAC5BT,cAAc,CAACM,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC;IACjC;EACF,CAAC,EAAE,CAACT,cAAc,EAAEM,KAAK,CAAC,CAAC;;EAE3B;EACA;EACA;;EAEA,oBACEJ,OAAA,CAACP,QAAQ;IAAAe,QAAA,eACPR,OAAA;MAAAQ,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEf,CAAC;AAACP,EAAA,CAjBIJ,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAmBbA,OAAO,CAACa,SAAS,GAAG;EAClBhB,cAAc,EAAEH,SAAS,CAACoB,IAAI,CAACC,UAAU;EACzCd,OAAO,EAAEP,SAAS,CAACsB,MAAM,CAACD,UAAU;EACpCb,IAAI,EAAER,SAAS,CAACsB,MAAM,CAACD,UAAU;EACjCZ,KAAK,EAAET,SAAS,CAACsB;AACnB,CAAC;AAED,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCjB,OAAO,EAAEiB,KAAK,CAACjB,OAAO;EACtBC,IAAI,EAAEgB,KAAK,CAAChB;AACd,CAAC,CAAC;AAEF,eAAeP,OAAO,CAACsB,eAAe,EAAE;EAAEpB;AAAe,CAAC,CAAC,CAACG,OAAO,CAAC;AAAC,IAAAY,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}