{"ast":null,"code":"var _jsxFileName = \"D:\\\\acad\\\\sem 7\\\\Project\\\\Project\\\\client\\\\src\\\\componenets\\\\profile\\\\ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars:\", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers:\", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks :\", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired // Corrected prop name\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","jsxDEV","_jsxDEV","ProfileGithub","username","repos","_s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","href","html_url","target","rel","name","description","stargazers_count","watchers_count","forks_count","_id","_c","propTypes","func","isRequired","array","string","mapStateToProps","state","profile","$RefreshReg$"],"sources":["D:/acad/sem 7/Project/Project/client/src/componenets/profile/ProfileGithub.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars:{repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers:{repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks :{repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired, // Corrected prop name\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}