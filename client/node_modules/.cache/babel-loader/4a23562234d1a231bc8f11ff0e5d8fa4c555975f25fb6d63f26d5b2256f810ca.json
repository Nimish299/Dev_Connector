{"ast":null,"code":"var _jsxFileName = \"D:\\\\acad\\\\sem 7\\\\Project\\\\Project\\\\client\\\\src\\\\componenets\\\\profile\\\\ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = ({\n  useername,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n  useEffect(() => {\n    getGithubRepos(useername);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  useername: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","jsxDEV","_jsxDEV","ProfileGithub","useername","repos","_s","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","array","string","mapStateToProps","state","profile","$RefreshReg$"],"sources":["D:/acad/sem 7/Project/Project/client/src/componenets/profile/ProfileGithub.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ useername, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(useername);\r\n  }, [getGithubRepos]);\r\n  return <div></div>;\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  useername: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,SAAS;EAAEJ,cAAc;EAAEK;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9DV,SAAS,CAAC,MAAM;IACdI,cAAc,CAACI,SAAS,CAAC;EAC3B,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EACpB,oBAAOE,OAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB,CAAC;AAACJ,EAAA,CALIH,aAAa;AAAAQ,EAAA,GAAbR,aAAa;AAOnBA,aAAa,CAACS,SAAS,GAAG;EACxBZ,cAAc,EAAEH,SAAS,CAACgB,IAAI,CAACC,UAAU;EACzCT,KAAK,EAAER,SAAS,CAACkB,KAAK,CAACD,UAAU;EACjCV,SAAS,EAAEP,SAAS,CAACmB,MAAM,CAACF;AAC9B,CAAC;AACD,MAAMG,eAAe,GAAIC,KAAK,KAAM;EAClCb,KAAK,EAAEa,KAAK,CAACC,OAAO,CAACd;AACvB,CAAC,CAAC;AACF,eAAeP,OAAO,CAACmB,eAAe,EAAE;EAAEjB;AAAe,CAAC,CAAC,CAACG,aAAa,CAAC;AAAC,IAAAQ,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}