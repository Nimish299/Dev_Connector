{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { POST_ERROR, GET_POSTS, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT } from './types';\n\n// get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/post');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n//add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/post/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/post/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// delete post\nexport const deletePost = id => async dispatch => {\n  if (window.confirm(`Are you sure ?This can't be undone! `)) try {\n    await axios.delete(`/api/post/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/post', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n// get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/post/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add comments\nexport const addComment = (postId, formData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`/api/post/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add comments\nexport const removeComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/post/comment/${postId}/${commentId}`);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","POST_ERROR","GET_POSTS","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","window","confirm","delete","addPost","formData","config","headers","post","getPost","addComment","postId","removeComment","commentId"],"sources":["D:/acad/sem 7/Project/Project/client/src/actions/post.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  POST_ERROR,\r\n  GET_POSTS,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n} from './types';\r\n\r\n// get posts\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/post');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n//add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// delete post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  if (window.confirm(`Are you sure ?This can't be undone! `))\r\n    try {\r\n      await axios.delete(`/api/post/${id}`);\r\n\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id,\r\n      });\r\n      dispatch(setAlert('Post Removed', 'success'));\r\n    } catch (err) {\r\n      // console.log(err.response);\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/post', formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n// get post\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/post/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add comments\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\r\n      `/api/post/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add comments\r\nexport const removeComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/post/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}