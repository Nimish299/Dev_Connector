{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { PROFILE_ERROR, GET_PROFILE } from './types';\nimport { history } from 'react-router-dom';\n//get current user profile\nimport { useNavigate } from 'react-router-dom';\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    // console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//create or update profile\nexport const createProfile = (formData, history, edit = false) => {\n  var _s = $RefreshSig$();\n  return _s(async dispatch => {\n    _s();\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post('/api/profile', formData, config);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? 'profile Updated' : 'Profile created', 'success'));\n      console.log('>>>> ', history);\n      const navigate = useNavigate();\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n};","map":{"version":3,"names":["axios","setAlert","PROFILE_ERROR","GET_PROFILE","history","useNavigate","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","edit","_s","$RefreshSig$","config","headers","post","console","log","navigate","errors","forEach","error"],"sources":["D:/acad/sem 7/Project/Project/client/src/actions/profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { PROFILE_ERROR, GET_PROFILE } from './types';\r\nimport { history } from 'react-router-dom';\r\n//get current user profile\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err.response);\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//create or update profile\r\nexport const createProfile =\r\n  (formData, history, edit = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      const res = await axios.post('/api/profile', formData, config);\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n        setAlert(edit ? 'profile Updated' : 'Profile created', 'success')\r\n      );\r\n      console.log('>>>> ', history);\r\n\r\n      const navigate = useNavigate();\r\n\r\n      if (!edit) {\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,SAAS;AAClC,SAASC,aAAa,EAAEC,WAAW,QAAQ,SAAS;AACpD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACzD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iBAAiB,CAAC;IAE9CF,QAAQ,CAAC;MACPG,IAAI,EAAEP,WAAW;MACjBQ,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;IACAN,QAAQ,CAAC;MACPG,IAAI,EAAER,aAAa;MACnBS,OAAO,EAAE;QAAEG,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GACxBA,CAACC,QAAQ,EAAEf,OAAO,EAAEgB,IAAI,GAAG,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,OAAAD,EAAA,CAChC,MAAOd,QAAQ,IAAK;IAAAc,EAAA;IAClB,IAAI;MACF,MAAME,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;MAED,MAAMhB,GAAG,GAAG,MAAMR,KAAK,CAACyB,IAAI,CAAC,cAAc,EAAEN,QAAQ,EAAEI,MAAM,CAAC;MAC9DhB,QAAQ,CAAC;QACPG,IAAI,EAAEP,WAAW;QACjBQ,OAAO,EAAEH,GAAG,CAACI;MACf,CAAC,CAAC;MAEFL,QAAQ,CACNN,QAAQ,CAACmB,IAAI,GAAG,iBAAiB,GAAG,iBAAiB,EAAE,SAAS,CAClE,CAAC;MACDM,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEvB,OAAO,CAAC;MAE7B,MAAMwB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;MAE9B,IAAI,CAACe,IAAI,EAAE;QACTQ,QAAQ,CAAC,YAAY,CAAC;MACxB;IACF,CAAC,CAAC,OAAOf,GAAG,EAAE;MACZ,MAAMgB,MAAM,GAAGhB,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACiB,MAAM;MAEvC,IAAIA,MAAM,EAAE;QACVA,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAKxB,QAAQ,CAACN,QAAQ,CAAC8B,KAAK,CAACjB,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;MACpE;MACAP,QAAQ,CAAC;QACPG,IAAI,EAAER,aAAa;QACnBS,OAAO,EAAE;UAAEG,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;UAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;QAAO;MACvE,CAAC,CAAC;IACJ;EACF,CAAC;IAAA,QAhBoBZ,WAAW;EAAA;AAAA,CAgB/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}